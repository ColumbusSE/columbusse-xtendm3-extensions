{"programModules":{"CREXTPRT":{"program":"CREXTPRT","triggers":{"SCE_Batch_CREXTPRT_QMS601PF":{"name":"SCE_Batch_CREXTPRT_QMS601PF","method":"extendOutput","advice":"POST","active":true,"modified":1726494587541,"modifiedBy":"FZAHLTEN","sourceUuid":"235ca833-2214-41a5-96ee-3990887be2f0","programName":"CREXTPRT","utilities":[],"type":"METHOD","priority":500,"market":"ALL"}},"transactions":{},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"235ca833-2214-41a5-96ee-3990887be2f0":{"uuid":"235ca833-2214-41a5-96ee-3990887be2f0","updated":1732119674172,"updatedBy":"FZAHLTEN","created":1720689409234,"createdBy":"FZAHLTEN","apiVersion":"0.21","beVersion":"16.0.0.20240916174523.6","language":"GROOVY","codeHash":"6A4EBE5096187B43E0AD53F78B976C9FFC28A261D0821B7FB1C0D5E413695E0B","code":""}}}